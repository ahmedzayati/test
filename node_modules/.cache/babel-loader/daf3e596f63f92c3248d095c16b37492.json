{"ast":null,"code":"import _objectSpread from \"/home/admed/Desktop/pfa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// import { PERSONNELS } from \"../shared/personnel\";\nimport * as ActionTypes from \"./ActionTypes\";\nexport var Personnels = function Personnels() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    personnels: [{\n      cin: \"1\",\n      nomPersonnel: \"ahmed\"\n    }]\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_PERSONNELS:\n      return _objectSpread({}, state, {\n        personnels: action.personnels\n      });\n\n    case ActionTypes.DELETE_PERSONNELS:\n      console.log(action.Id);\n      return _objectSpread({}, state, {\n        personnels: state.personnels.filter(function (per) {\n          return per.nomPersonnel !== action.Id;\n        })\n      });\n\n    case ActionTypes.PUSH_PERSONNELS:\n      Date.prototype.yyyymmdd = function () {\n        var mm = this.getMonth() + 1; // getMonth() is zero-based\n\n        var dd = this.getDate();\n        return [this.getFullYear(), (mm > 9 ? \"\" : \"0\") + mm, (dd > 9 ? \"\" : \"0\") + dd].join(\"/\");\n      };\n\n      var currentTime = new Date();\n      currentTime.toString();\n      return _objectSpread({}, state, {\n        personnels: state.personnels.concat({\n          id: parseInt(action.code),\n          Name: action.pseudo,\n          Position: \"Debutant\",\n          Email: \"\",\n          StartDate: currentTime.yyyymmdd(),\n          Age: 18,\n          Salary: \"$100,750\"\n        })\n      });\n\n    case ActionTypes.ALTER_PERSONNELS:\n      console.log(state.personnels);\n      return _objectSpread({}, state, {\n        personnels: state.personnels.map(function (personnel) {\n          if (personnel.id == action.Id) {\n            personnel.Salary = action.Salary;\n            personnel.id = action.Id;\n            personnel.Position = action.Position;\n          }\n\n          return personnel;\n        })\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/admed/Desktop/pfa/src/redux/personnel.js"],"names":["ActionTypes","Personnels","state","personnels","cin","nomPersonnel","action","type","ADD_PERSONNELS","DELETE_PERSONNELS","console","log","Id","filter","per","PUSH_PERSONNELS","Date","prototype","yyyymmdd","mm","getMonth","dd","getDate","getFullYear","join","currentTime","toString","concat","id","parseInt","code","Name","pseudo","Position","Email","StartDate","Age","Salary","ALTER_PERSONNELS","map","personnel"],"mappings":";AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAsE;AAAA,MAArEC,KAAqE,uEAA7D;AAAEC,IAAAA,UAAU,EAAE,CAAC;AAACC,MAAAA,GAAG,EAAC,GAAL;AAASC,MAAAA,YAAY,EAAC;AAAtB,KAAD;AAAd,GAA6D;AAAA,MAAXC,MAAW;;AAC9F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,cAAjB;AACE,+BAAYN,KAAZ;AAAmBC,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAAtC;;AAEF,SAAKH,WAAW,CAACS,iBAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,EAAnB;AAEE,+BACKV,KADL;AAEEC,QAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBU,MAAjB,CAAwB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACT,YAAJ,KAAqBC,MAAM,CAACM,EAAhC;AAAA,SAA3B;AAFd;;AAIF,SAAKZ,WAAW,CAACe,eAAjB;AACEC,MAAAA,IAAI,CAACC,SAAL,CAAeC,QAAf,GAA0B,YAAW;AACnC,YAAIC,EAAE,GAAG,KAAKC,QAAL,KAAkB,CAA3B,CADmC,CACL;;AAC9B,YAAIC,EAAE,GAAG,KAAKC,OAAL,EAAT;AAEA,eAAO,CACL,KAAKC,WAAL,EADK,EAEL,CAACJ,EAAE,GAAG,CAAL,GAAS,EAAT,GAAc,GAAf,IAAsBA,EAFjB,EAGL,CAACE,EAAE,GAAG,CAAL,GAAS,EAAT,GAAc,GAAf,IAAsBA,EAHjB,EAILG,IAJK,CAIA,GAJA,CAAP;AAKD,OATD;;AAUA,UAAIC,WAAW,GAAG,IAAIT,IAAJ,EAAlB;AACAS,MAAAA,WAAW,CAACC,QAAZ;AACA,+BACKxB,KADL;AAEEC,QAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBwB,MAAjB,CAAwB;AAClCC,UAAAA,EAAE,EAAEC,QAAQ,CAACvB,MAAM,CAACwB,IAAR,CADsB;AAElCC,UAAAA,IAAI,EAAEzB,MAAM,CAAC0B,MAFqB;AAGlCC,UAAAA,QAAQ,EAAE,UAHwB;AAIlCC,UAAAA,KAAK,EAAE,EAJ2B;AAKlCC,UAAAA,SAAS,EAAEV,WAAW,CAACP,QAAZ,EALuB;AAMlCkB,UAAAA,GAAG,EAAE,EAN6B;AAOlCC,UAAAA,MAAM,EAAE;AAP0B,SAAxB;AAFd;;AAYF,SAAKrC,WAAW,CAACsC,gBAAjB;AACE5B,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACC,UAAlB;AACA,+BACKD,KADL;AAEEC,QAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBoC,GAAjB,CAAqB,UAAAC,SAAS,EAAI;AAC5C,cAAIA,SAAS,CAACZ,EAAV,IAAgBtB,MAAM,CAACM,EAA3B,EAA+B;AAC7B4B,YAAAA,SAAS,CAACH,MAAV,GAAmB/B,MAAM,CAAC+B,MAA1B;AACAG,YAAAA,SAAS,CAACZ,EAAV,GAAetB,MAAM,CAACM,EAAtB;AACA4B,YAAAA,SAAS,CAACP,QAAV,GAAqB3B,MAAM,CAAC2B,QAA5B;AACD;;AACD,iBAAOO,SAAP;AACD,SAPW;AAFd;;AAWF;AACE,aAAOtC,KAAP;AAlDJ;AAoDD,CArDM","sourcesContent":["// import { PERSONNELS } from \"../shared/personnel\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Personnels = (state = { personnels: [{cin:\"1\",nomPersonnel:\"ahmed\"}] }, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_PERSONNELS:\n      return { ...state, personnels: action.personnels };\n\n    case ActionTypes.DELETE_PERSONNELS:\n    console.log(action.Id)\n\n      return {\n        ...state,\n        personnels: state.personnels.filter(per => per.nomPersonnel !== action.Id)\n      };\n    case ActionTypes.PUSH_PERSONNELS:\n      Date.prototype.yyyymmdd = function() {\n        var mm = this.getMonth() + 1; // getMonth() is zero-based\n        var dd = this.getDate();\n\n        return [\n          this.getFullYear(),\n          (mm > 9 ? \"\" : \"0\") + mm,\n          (dd > 9 ? \"\" : \"0\") + dd\n        ].join(\"/\");\n      };\n      var currentTime = new Date();\n      currentTime.toString();\n      return {\n        ...state,\n        personnels: state.personnels.concat({\n          id: parseInt(action.code),\n          Name: action.pseudo,\n          Position: \"Debutant\",\n          Email: \"\",\n          StartDate: currentTime.yyyymmdd(),\n          Age: 18,\n          Salary: \"$100,750\"\n        })\n      };\n    case ActionTypes.ALTER_PERSONNELS:\n      console.log(state.personnels);\n      return {\n        ...state,\n        personnels: state.personnels.map(personnel => {\n          if (personnel.id == action.Id) {\n            personnel.Salary = action.Salary;\n            personnel.id = action.Id;\n            personnel.Position = action.Position;\n          }\n          return personnel;\n        })\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}