{"ast":null,"code":"import _classCallCheck from \"/home/admed/Desktop/pfa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/admed/Desktop/pfa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/admed/Desktop/pfa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/admed/Desktop/pfa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/admed/Desktop/pfa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/admed/Desktop/pfa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/admed/Desktop/pfa/src/components/Header.js\";\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Modal, ModalBody, ModalHeader, Label, Input, Button, Form, FormGroup, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport React from \"react\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.toggleNav = _this.toggleNav.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.toggleModal = this.toggleModal.bind(this);\n\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isNavOpen: false,\n      isModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggleNav\",\n    value: function toggleNav() {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen\n      });\n    } //   toggleModal() {\n    //     this.setState({\n    //       isModalOpen: !this.state.isModalOpen\n    //     });\n    //   }\n\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin(event) {\n      this.toggleModal();\n      alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.grade !== \"2\") return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        dark: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(NavbarToggler, {\n        onClick: this.toggleNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Link, {\n        className: \"nav-link\",\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" \", React.createElement(NavbarBrand, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"assets/images/logo.png\",\n        height: \"30\",\n        width: \"41\",\n        alt: \"CarMaster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(Collapse, {\n        isOpen: this.state.isNavOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        navbar: true,\n        className: \"ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"nav-link\",\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-home fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \" Home\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-list fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \" Menu\"), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"nav-link\",\n        to: \"/category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"our brands\")), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Option 2\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Reset\")))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"nav-link\",\n        to: \"/contactus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-address-card fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), \" Contact Us\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"nav-link\",\n        to: \"/aboutus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-address-card fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \" About Us\"))), React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        className: \"btn-login\",\n        onClick: this.toggleModal,\n        outline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-sign-in fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \" Login\"))))))));else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default Header;","map":{"version":3,"sources":["/home/admed/Desktop/pfa/src/components/Header.js"],"names":["Nav","Navbar","NavbarBrand","NavbarToggler","Collapse","NavItem","Modal","ModalBody","ModalHeader","Label","Input","Button","Form","FormGroup","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavLink","Link","React","Header","props","toggleNav","bind","handleLogin","state","isNavOpen","isModalOpen","setState","event","toggleModal","alert","username","value","password","remember","checked","preventDefault","grade","Component"],"mappings":"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","sourcesContent":["import {\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Label,\n  Input,\n  Button,\n  Form,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport React from \"react\";\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNav = this.toggleNav.bind(this);\n    // this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false\n    };\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n  //   toggleModal() {\n  //     this.setState({\n  //       isModalOpen: !this.state.isModalOpen\n  //     });\n  //   }\n\n  handleLogin(event) {\n    this.toggleModal();\n    alert(\n      \"Username: \" +\n        this.username.value +\n        \" Password: \" +\n        this.password.value +\n        \" Remember: \" +\n        this.remember.checked\n    );\n    event.preventDefault();\n  }\n  render() {\n    if (this.props.grade!==\"2\")\n    return (\n      <div>\n        \n         <Navbar dark expand=\"md\">\n          <div className=\"container\">\n            <NavbarToggler onClick={this.toggleNav} />\n            <Link className=\"nav-link\" to=\"/home\"> <NavbarBrand className=\"mr-auto\" >\n              <img\n                src=\"assets/images/logo.png\"\n                height=\"30\"\n                width=\"41\"\n                alt=\"CarMaster\"\n              />\n            </NavbarBrand>\n            </Link>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar className=\"ml-5\">\n                <NavItem>\n                  <Link className=\"nav-link\" to=\"/home\">\n                    <span className=\"fa fa-home fa-lg\" /> Home\n                  </Link>\n                </NavItem>\n                <NavItem>\n                  <UncontrolledDropdown>\n                    <DropdownToggle nav caret>\n                      <span className=\"fa fa-list fa-lg\" /> Menu\n                      \n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <NavLink className=\"nav-link\" to=\"/category\">\n                        <DropdownItem>our brands</DropdownItem>\n                      </NavLink>\n                      <DropdownItem>Option 2</DropdownItem>\n                      <DropdownItem divider />\n                      <DropdownItem>Reset</DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\n                    <span className=\"fa fa-address-card fa-lg\" /> Contact Us\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\n                    <span className=\"fa fa-address-card fa-lg\" /> About Us\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Link to=\"/login\">\n                    {\" \"}\n                    <Button\n                      className=\"btn-login\"\n                      onClick={this.toggleModal}\n                      outline\n                    >\n                      <span className=\"fa fa-sign-in fa-lg\" /> Login\n                    </Button>\n                  </Link>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n         {/* <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader>Login</ModalHeader>\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <p>If you don't have an account <Link onClick={this.toggleNav}  to='/signup'>SIGNUP</Link>  </p>\n                                </Label>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>  */}\n              </div>\n    );\n\n    else return(<div>\n\n      \n    </div>)\n  }\n}\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}